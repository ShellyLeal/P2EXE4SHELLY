package ita.P2EXE4SHELLY;


import java.io.BufferedWriter;
import java.io.ByteArrayInputStream;
import java.io.FileWriter;
import java.io.IOException;

import org.junit.runners.MethodSorters;
import org.junit.FixMethodOrder;
import org.junit.Test;
@FixMethodOrder(MethodSorters.NAME_ASCENDING)  //executar os testes da ordem certa
public class VulnerabilityTest {
	
	@Test 
	public void readTestFixedClass() throws IOException{
		FixedClass f = new FixedClass();
		
			BufferedWriter bw = new BufferedWriter(new FileWriter("arquivo.txt"));
			bw.write("arquivoteste");
			bw.close();
		
		String inputData = "R"+ System.getProperty("line.separator")
	    +"S"+ System.getProperty("line.separator");
		System.setIn(new ByteArrayInputStream(inputData.getBytes()));
		
			f.fixedMethod("arquivo.txt");
						
	}
	@Test 
	public void writeTestFixedClass() throws IOException{
		FixedClass f = new FixedClass();
		String inputData = "W"+ System.getProperty("line.separator")
	    +"novoarquivo"+ System.getProperty("line.separator");;
		System.setIn(new ByteArrayInputStream(inputData.getBytes()));
		f.fixedMethod("arquivo.txt");
						
	}
	
	@Test 
	public void wrongEntryTestFixedClass() throws IOException{
		FixedClass f = new FixedClass();
		String inputData = "E";
		System.setIn(new ByteArrayInputStream(inputData.getBytes()));
		
			f.fixedMethod("arquivo.txt");
		
						
	}
	@Test 
	public void wrongFileFormatException() throws IOException{
		FixedClass f = new FixedClass();
		
			BufferedWriter bw = new BufferedWriter(new FileWriter("arquivo.txt"));
			bw.write("testando||?**");
			bw.close();
		
		String inputData = "R";
		System.setIn(new ByteArrayInputStream(inputData.getBytes()));
	
			f.fixedMethod("arquivo.txt");			
			

							
	}
	@Test 
	public void GetOutofTheConsoleFixedClass() throws IOException{
		FixedClass f = new FixedClass();
		String inputData = "S";
		System.setIn(new ByteArrayInputStream(inputData.getBytes()));
		f.fixedMethod("arquivo.txt");
	}
}
